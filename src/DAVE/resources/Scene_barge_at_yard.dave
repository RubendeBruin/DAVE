# auto generated pyhton code
# By beneden
# Time: 2020-03-17 14:40:41 UTC

# To be able to distinguish the important number (eg: fixed positions) from
# non-important numbers (eg: a position that is solved by the static solver) we use a dummy-function called 'solved'.
# For anything written as solved(number) that actual number does not influence the static solution
def solved(number):
    return number

# code for Yard
s.new_frame(name='Yard',
           position=(0.0,
                     0.0,
                     0.0),
           rotation=(0.0,
                     0.0,
                     0.0),
           fixed =(True, True, True, True, True, True) )
# code for Axis - visuals
s.new_frame(name='Axis - visuals',
           parent='Yard',
           position=(0.0,
                     0.0,
                     1.0),
           rotation=(0.0,
                     0.0,
                     0.0),
           fixed =(True, True, True, True, True, True) )
# code for Quay Contactmesh
mesh = s.new_contactmesh(name='Quay Contactmesh', parent='Yard')
mesh.trimesh.load_obj(s.get_resource_path(r'cube.obj'), scale = (250.0,10.0,6.0), rotation = (0.0,0.0,0.0), offset = (0.0,-5.0,-0.01))
# code for MP
s.new_point(name='MP',
          parent='Yard',
          position=(10.0,
                    -1.0,
                    4.0))
# code for MP_1
s.new_point(name='MP_1',
          parent='Yard',
          position=(-50.0,
                    -1.0,
                    4.0))
# code for MP_2
s.new_point(name='MP_2',
          parent='Yard',
          position=(-10.0,
                    -1.0,
                    4.0))
# code for MP_3
s.new_point(name='MP_3',
          parent='Yard',
          position=(10.0,
                    -1.0,
                    4.0))
# code for MP_4
s.new_point(name='MP_4',
          parent='Yard',
          position=(40.0,
                    -1.0,
                    4.0))
# code for MP_5
s.new_point(name='MP_5',
          parent='Yard',
          position=(70.0,
                    -1.0,
                    4.0))
# code for MP_6
s.new_point(name='MP_6',
          parent='Yard',
          position=(90.0,
                    -1.0,
                    4.0))
# code for barge_positioning_target
s.new_frame(name='barge_positioning_target',
           position=(0.0,
                     0.0,
                     0.0),
           rotation=(0.0,
                     0.0,
                     0.0),
           fixed =(True, True, True, True, True, True) )
# code for Barge
s.new_rigidbody(name='Barge',
                mass=5000.0,
                cog=(50.0,
                     0.0,
                     5.0),
                position=(solved(-0.3459870174521142),
                          solved(17.86201244625208),
                          solved(-5.0077938846999235)),
                rotation=(solved(0.723298530920819),
                          solved(-0.008466583214325479),
                          solved(0.5144621617471866)),
                     inertia_radii = (10.0, 40.0, 40.0),
                fixed =(False, False, False, False, False, False) )
# code for Buoyancy mesh
mesh = s.new_buoyancy(name='Buoyancy mesh',
          parent='Barge')
mesh.trimesh.load_obj(s.get_resource_path(r'cube.obj'), scale = (100.0,30.0,8.0), rotation = (0.0,0.0,0.0), offset = (50.0,0.0,4.0))
# code for Barge positioning springs
s.new_linear_connector_6d(name='Barge positioning springs',
            main='Barge',
            secondary='barge_positioning_target',
            stiffness=(100.0, 100.0, 0.0, 
                       0.0, 0.0, 10000.0) )

# code for Barge Ballast system and its tanks
bs = s.new_ballastsystem('Barge Ballast system', parent = 'Barge')
bs.new_tank('ps_inner1', position = (6.25,3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0.0)
bs.new_tank('ps_outer1', position = (6.25,11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0.0)
bs.new_tank('sb_inner1', position = (6.25,-3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0.0)
bs.new_tank('sb_outer1', position = (6.25,-11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 5.691057359489004)
bs.new_tank('ps_inner2', position = (18.75,3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0.0)
bs.new_tank('ps_outer2', position = (18.75,11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0.0)
bs.new_tank('sb_inner2', position = (18.75,-3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0.0)
bs.new_tank('sb_outer2', position = (18.75,-11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0)
bs.new_tank('ps_inner3', position = (31.25,3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100.0)
bs.new_tank('ps_outer3', position = (31.25,11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 67.39837372806355)
bs.new_tank('sb_inner3', position = (31.25,-3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100)
bs.new_tank('sb_outer3', position = (31.25,-11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100)
bs.new_tank('ps_inner4', position = (43.75,3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100)
bs.new_tank('ps_outer4', position = (43.75,11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100)
bs.new_tank('sb_inner4', position = (43.75,-3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100)
bs.new_tank('sb_outer4', position = (43.75,-11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100)
bs.new_tank('ps_inner5', position = (56.25,3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100)
bs.new_tank('ps_outer5', position = (56.25,11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100.0)
bs.new_tank('sb_inner5', position = (56.25,-3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100.0)
bs.new_tank('sb_outer5', position = (56.25,-11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100.0)
bs.new_tank('ps_inner6', position = (68.75,3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100.0)
bs.new_tank('ps_outer6', position = (68.75,11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100.0)
bs.new_tank('sb_inner6', position = (68.75,-3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100.0)
bs.new_tank('sb_outer6', position = (68.75,-11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100.0)
bs.new_tank('ps_inner7', position = (81.25,3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 100.0)
bs.new_tank('ps_outer7', position = (81.25,11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 4.959349395206298)
bs.new_tank('sb_inner7', position = (81.25,-3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0)
bs.new_tank('sb_outer7', position = (81.25,-11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0)
bs.new_tank('ps_inner8', position = (93.75,3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0)
bs.new_tank('ps_outer8', position = (93.75,11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0)
bs.new_tank('sb_inner8', position = (93.75,-3.75,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0)
bs.new_tank('sb_outer8', position = (93.75,-11.25,4),
            capacity_kN = 5656.078124999999, frozen = False, actual_fill = 0)
# code for bollard_ps0
s.new_point(name='bollard_ps0',
          parent='Barge',
          position=(5.0,
                    -15.0,
                    8.0))
# code for bollard_sb0
s.new_point(name='bollard_sb0',
          parent='Barge',
          position=(5.0,
                    15.0,
                    8.0))
# code for bollard_ps1
s.new_point(name='bollard_ps1',
          parent='Barge',
          position=(35.0,
                    -15.0,
                    8.0))
# code for bollard_sb1
s.new_point(name='bollard_sb1',
          parent='Barge',
          position=(35.0,
                    15.0,
                    8.0))
# code for bollard_ps2
s.new_point(name='bollard_ps2',
          parent='Barge',
          position=(65.0,
                    -15.0,
                    8.0))
# code for bollard_sb2
s.new_point(name='bollard_sb2',
          parent='Barge',
          position=(65.0,
                    15.0,
                    8.0))
# code for bollard_ps3
s.new_point(name='bollard_ps3',
          parent='Barge',
          position=(95.0,
                    -15.0,
                    8.0))
# code for bollard_sb3
s.new_point(name='bollard_sb3',
          parent='Barge',
          position=(95.0,
                    15.0,
                    8.0))
# code for towpoint_ps
s.new_point(name='towpoint_ps',
          parent='Barge',
          position=(100.0,
                    10.0,
                    8.0))
# code for towpoint_sb
s.new_point(name='towpoint_sb',
          parent='Barge',
          position=(100.0,
                    -10.0,
                    8.0))
# code for Fender position 1
s.new_point(name='Fender position 1',
          parent='Barge',
          position=(80.0,
                    -16.0,
                    6.0))
# code for Contactball
s.new_contactball(name='Contactball',
                  parent='Fender position 1',
                  radius=2.0,
                  k=100000.0,
                  meshes = ["Quay Contactmesh"])
# code for Fender position 1_1
s.new_point(name='Fender position 1_1',
          parent='Barge',
          position=(20.0,
                    -16.0,
                    6.0))
# code for Contactball_1
s.new_contactball(name='Contactball_1',
                  parent='Fender position 1_1',
                  radius=2.0,
                  k=100000.0,
                  meshes = ["Quay Contactmesh"])
# code for foundation_jacket
s.new_rigidbody(name='foundation_jacket',
                mass=700.0,
                cog=(0.0,
                     0.0,
                     24.0),
                parent='Barge',
                position=(20.0,
                          0.0,
                          8.0),
                rotation=(0.0,
                          0.0,
                          0.0),
                     inertia_radii = (20.0, 20.0, 8.0),
                fixed =(True, True, True, True, True, True) )
# code for foundation_lp1
s.new_point(name='foundation_lp1',
          parent='foundation_jacket',
          position=(5.0,
                    5.0,
                    51.0))
# code for foundation_lp4
s.new_point(name='foundation_lp4',
          parent='foundation_jacket',
          position=(5.0,
                    -5.0,
                    51.0))
# code for foundation_lp3
s.new_point(name='foundation_lp3',
          parent='foundation_jacket',
          position=(-5.0,
                    -5.0,
                    51.0))
# code for foundation_lp2
s.new_point(name='foundation_lp2',
          parent='foundation_jacket',
          position=(-5.0,
                    5.0,
                    51.0))
# code for Cable
s.new_cable(name='Cable',
            endA='MP_5',
            endB='bollard_ps3',
            length=25.338,
            EA=10000.0)
# code for Cable_1
s.new_cable(name='Cable_1',
            endA='bollard_ps2',
            endB='MP_6',
            length=25.338,
            EA=10000.0)
# code for Cable_2
s.new_cable(name='Cable_2',
            endA='bollard_ps1',
            endB='MP_3',
            length=25.338,
            EA=10000.0)
# code for Cable_3
s.new_cable(name='Cable_3',
            endA='bollard_ps0',
            endB='MP_4',
            length=35.242,
            EA=10000.0)
# code for Cable_4
s.new_cable(name='Cable_4',
            endA='bollard_ps0',
            endB='MP_2',
            length=15.556,
            EA=10000.0)
# code for Cable_5
s.new_cable(name='Cable_5',
            endA='bollard_sb0',
            endB='MP_1',
            length=65.0,
            EA=10000.0)
# code for Cable_6
s.new_cable(name='Cable_6',
            endA='MP_6',
            endB='bollard_ps3',
            length=6.481,
            EA=10000.0)
# code for Wind application point
s.new_point(name='Wind application point',
          parent='foundation_jacket',
          position=(0.0,
                    0.0,
                    31.0))
# code for Wind-force
s.new_force(name='Wind-force',
            parent='Wind application point',
            force=(0.0, -1000.0, 0.0),
            moment=(0.0, 0.0, 0.0) )
# code for MP_7
s.new_point(name='MP_7',
          parent='Yard',
          position=(121.0,
                    -1.0,
                    4.0))
# code for Cable_7
s.new_cable(name='Cable_7',
            endA='MP_7',
            endB='towpoint_ps',
            length=36.0,
            EA=10000.0)
# code for Hyd
s.new_waveinteraction(name='Hyd',
            parent='Barge',
            path=r'barge_100_30_4.dhyd',
            offset=(50, 0, 4) )
# code for Barge Visual
s.new_visual(name='Barge Visual',
            parent='Barge',
            path=r'barge.obj',
            offset=(0.0, 0.0, 0.0), 
            rotation=(0, 0, 0), 
            scale=(1.0, 0.75, 0.8) )
# code for Quay visuals
s.new_visual(name='Quay visuals',
            parent='Axis - visuals',
            path=r'cube.obj',
            offset=(0.0, -100.0, 0.0), 
            rotation=(0.0, 0.0, 0.0), 
            scale=(1000.0, 200.0, 4.0) )
# code for Mooring pile visual
s.new_visual(name='Mooring pile visual',
            parent='Axis - visuals',
            path=r'cylinder 1x1x1.obj',
            offset=(10.0, -1.0, 0.0), 
            rotation=(0.0, 0.0, 0.0), 
            scale=(1.0, 1.0, 3.0) )
# code for Mooring pile visual_1
s.new_visual(name='Mooring pile visual_1',
            parent='Axis - visuals',
            path=r'cylinder 1x1x1.obj',
            offset=(70.0, -1.0, 0.0), 
            rotation=(0.0, 0.0, 0.0), 
            scale=(1.0, 1.0, 3.0) )
# code for Mooring pile visual_1_1
s.new_visual(name='Mooring pile visual_1_1',
            parent='Axis - visuals',
            path=r'cylinder 1x1x1.obj',
            offset=(40.0, -1.0, 0.0), 
            rotation=(0.0, 0.0, 0.0), 
            scale=(1.0, 1.0, 3.0) )
# code for Mooring pile visual_2
s.new_visual(name='Mooring pile visual_2',
            parent='Axis - visuals',
            path=r'cylinder 1x1x1.obj',
            offset=(-10.0, -1.0, 0.0), 
            rotation=(0.0, 0.0, 0.0), 
            scale=(1.0, 1.0, 3.0) )
# code for Mooring pile visual_2_1
s.new_visual(name='Mooring pile visual_2_1',
            parent='Axis - visuals',
            path=r'cylinder 1x1x1.obj',
            offset=(-50.0, -1.0, 0.0), 
            rotation=(0.0, 0.0, 0.0), 
            scale=(1.0, 1.0, 3.0) )
# code for Mooring pile visual_1_1_1
s.new_visual(name='Mooring pile visual_1_1_1',
            parent='Axis - visuals',
            path=r'cylinder 1x1x1.obj',
            offset=(90.0, -1.0, 0.0), 
            rotation=(0.0, 0.0, 0.0), 
            scale=(1.0, 1.0, 3.0) )
# code for Visual - worker
s.new_visual(name='Visual - worker',
            parent='Axis - visuals',
            path=r'worker.obj',
            offset=(10.0, -1.0, 3.5), 
            rotation=(0.0, 0.0, 170.0), 
            scale=(1, 1, 1) )
# code for foundation_Visual
s.new_visual(name='foundation_Visual',
            parent='foundation_jacket',
            path=r'foundation.obj',
            offset=(0, 0, 0), 
            rotation=(0, 0, 0), 
            scale=(1, 1, 1) )
# code for Mooring pile visual_1_1_1_1
s.new_visual(name='Mooring pile visual_1_1_1_1',
            parent='Axis - visuals',
            path=r'cylinder 1x1x1.obj',
            offset=(121.0, -1.0, 0.0), 
            rotation=(0.0, 0.0, 0.0), 
            scale=(1.0, 1.0, 3.0) )